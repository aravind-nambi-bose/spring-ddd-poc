package com.bose.checkout.domain.model.checkout;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.bose.checkout.domain.model.cart.Cart;
import com.bose.checkout.domain.model.checkout.User.Builder;
import com.bose.checkout.domain.service.AddressValidator;
import java.time.LocalDateTime;
import java.util.Map;
import javax.persistence.PrePersist;

@DynamoDBTable(tableName = "Checkout")
public class Checkout {

  @DynamoDBHashKey
  @DynamoDBAutoGeneratedKey
  private String id;
  private Cart cart;
  private User user;
  private LocalDateTime expirationTime;

  Checkout() {
    //Empty constructor
  }

  public Checkout(Cart cart) {
    this.cart = cart;
  }

  /**
   * Set auto expiration to 3 months from the last update
   */
  @PrePersist
  public void updateExpirationTime() {
    this.expirationTime = LocalDateTime.now().plusMonths(3);
  }

  /**
   * Create user with address validation
   * @param email
   * @param address
   * @param localeAddressValidatorMap
   */
  public void createUser(String email, Address address, Map<String, AddressValidator> localeAddressValidatorMap) {
    Builder builder = new User.Builder();
    User user = builder.withAddressValidator(localeAddressValidatorMap.get(this.cart.getLocale()))
        .withEmailAndAddress(email, address)
        .build();
    this.user = user;
  }

  /**
   * Check if the checkout can be proccessed
   *
   * @return
   */
  public Boolean canBeProccessed() {
    return user != null && user.getAddress() != null;
  }
}
